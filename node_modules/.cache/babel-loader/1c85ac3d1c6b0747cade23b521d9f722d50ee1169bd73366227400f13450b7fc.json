{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import Header from'../components/Header';import SearchBar from'../components/SearchBar';import SongList from'../components/SongList';import MusicPlayer from'../components/MusicPlayer';import Playlist from'../components/Playlist';import Footer from'../components/Footer';import'../styles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{const[songs,setSongs]=useState([]);const[searchResults,setSearchResults]=useState([]);const[currentSong,setCurrentSong]=useState(null);const[isPlaying,setIsPlaying]=useState(false);const[playlists,setPlaylists]=useState([]);const[currentPlaylist,setCurrentPlaylist]=useState(null);const[showPlaylist,setShowPlaylist]=useState(false);useEffect(()=>{fetchSongs();},[]);const fetchSongs=async()=>{try{const response=await axios.get('https://thingproxy.freeboard.io/fetch/https://api.deezer.com/chart');const fetchedSongs=response.data.tracks.data.map(song=>({id:song.id,title:song.title,artist:song.artist.name,preview:song.preview,image:song.album.cover_medium}));setSongs(fetchedSongs);}catch(error){console.error('Error fetching songs:',error);}};const handleSearch=async query=>{try{const response=await axios.get(\"https://thingproxy.freeboard.io/fetch/https://api.deezer.com/search?q=\".concat(query));const searchResults=response.data.data.map(song=>({id:song.id,title:song.title,artist:song.artist.name,preview:song.preview,image:song.album.cover_medium}));setSearchResults(searchResults);}catch(error){console.error('Error searching songs:',error);}};const handlePlayPause=()=>{setIsPlaying(!isPlaying);};const handleNext=()=>{const currentIndex=songs.indexOf(currentSong);const nextIndex=(currentIndex+1)%songs.length;setCurrentSong(songs[nextIndex]);setIsPlaying(true);};const handlePrevious=()=>{const currentIndex=songs.indexOf(currentSong);const previousIndex=(currentIndex-1+songs.length)%songs.length;setCurrentSong(songs[previousIndex]);setIsPlaying(true);};const handleSongClick=song=>{setCurrentSong(song);setIsPlaying(true);};const handleAddToPlaylist=song=>{if(currentPlaylist){const playlist=playlists.find(p=>p.name===currentPlaylist);if(playlist&&!playlist.songs.find(s=>s.id===song.id)){playlist.songs.push(song);setPlaylists([...playlists]);}}};const handleRemoveFromPlaylist=song=>{if(currentPlaylist){const playlist=playlists.find(p=>p.name===currentPlaylist);if(playlist){playlist.songs=playlist.songs.filter(s=>s.id!==song.id);setPlaylists([...playlists]);}}};const handleCreatePlaylist=name=>{if(!playlists.find(p=>p.name===name)){setPlaylists([...playlists,{name,songs:[]}]);}};const handleEditPlaylist=(name,updatedSongs)=>{setPlaylists(playlists.map(playlist=>playlist.name===name?{...playlist,songs:updatedSongs}:playlist));};const handleDeletePlaylist=name=>{setPlaylists(playlists.filter(playlist=>playlist.name!==name));if(currentPlaylist===name)setCurrentPlaylist(null);};const handleShowPlaylist=()=>{setShowPlaylist(!showPlaylist);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onShowPlaylist:handleShowPlaylist}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(SongList,{songs:searchResults.length>0?searchResults:songs,onSongClick:handleSongClick,onAddToPlaylist:handleAddToPlaylist}),/*#__PURE__*/_jsx(MusicPlayer,{currentSong:currentSong,isPlaying:isPlaying,onPlayPause:handlePlayPause,onNext:handleNext,onPrevious:handlePrevious})]}),showPlaylist&&/*#__PURE__*/_jsx(Playlist,{playlists:playlists,currentPlaylist:currentPlaylist,onAddToPlaylist:handleAddToPlaylist,onRemoveFromPlaylist:handleRemoveFromPlaylist,onCreatePlaylist:handleCreatePlaylist,onEditPlaylist:handleEditPlaylist,onDeletePlaylist:handleDeletePlaylist,onSelectPlaylist:setCurrentPlaylist}),/*#__PURE__*/_jsx(Footer,{})]});};export default Home;","map":{"version":3,"names":["React","useState","useEffect","axios","Header","SearchBar","SongList","MusicPlayer","Playlist","Footer","jsx","_jsx","jsxs","_jsxs","Home","songs","setSongs","searchResults","setSearchResults","currentSong","setCurrentSong","isPlaying","setIsPlaying","playlists","setPlaylists","currentPlaylist","setCurrentPlaylist","showPlaylist","setShowPlaylist","fetchSongs","response","get","fetchedSongs","data","tracks","map","song","id","title","artist","name","preview","image","album","cover_medium","error","console","handleSearch","query","concat","handlePlayPause","handleNext","currentIndex","indexOf","nextIndex","length","handlePrevious","previousIndex","handleSongClick","handleAddToPlaylist","playlist","find","p","s","push","handleRemoveFromPlaylist","filter","handleCreatePlaylist","handleEditPlaylist","updatedSongs","handleDeletePlaylist","handleShowPlaylist","className","children","onShowPlaylist","onSearch","onSongClick","onAddToPlaylist","onPlayPause","onNext","onPrevious","onRemoveFromPlaylist","onCreatePlaylist","onEditPlaylist","onDeletePlaylist","onSelectPlaylist"],"sources":["C:/Users/ashsi/OneDrive/Desktop/SF TASK3/music-streaming-app/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport SearchBar from '../components/SearchBar';\r\nimport SongList from '../components/SongList';\r\nimport MusicPlayer from '../components/MusicPlayer';\r\nimport Playlist from '../components/Playlist';\r\nimport Footer from '../components/Footer';\r\nimport '../styles.css';\r\n\r\nconst Home = () => {\r\n  const [songs, setSongs] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [currentPlaylist, setCurrentPlaylist] = useState(null);\r\n  const [showPlaylist, setShowPlaylist] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  const fetchSongs = async () => {\r\n    try {\r\n      const response = await axios.get('https://thingproxy.freeboard.io/fetch/https://api.deezer.com/chart');\r\n      const fetchedSongs = response.data.tracks.data.map((song) => ({\r\n        id: song.id,\r\n        title: song.title,\r\n        artist: song.artist.name,\r\n        preview: song.preview,\r\n        image: song.album.cover_medium,\r\n      }));\r\n      setSongs(fetchedSongs);\r\n    } catch (error) {\r\n      console.error('Error fetching songs:', error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    try {\r\n      const response = await axios.get(`https://thingproxy.freeboard.io/fetch/https://api.deezer.com/search?q=${query}`);\r\n      const searchResults = response.data.data.map((song) => ({\r\n        id: song.id,\r\n        title: song.title,\r\n        artist: song.artist.name,\r\n        preview: song.preview,\r\n        image: song.album.cover_medium,\r\n      }));\r\n      setSearchResults(searchResults);\r\n    } catch (error) {\r\n      console.error('Error searching songs:', error);\r\n    }\r\n  };\r\n\r\n  const handlePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const currentIndex = songs.indexOf(currentSong);\r\n    const nextIndex = (currentIndex + 1) % songs.length;\r\n    setCurrentSong(songs[nextIndex]);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    const currentIndex = songs.indexOf(currentSong);\r\n    const previousIndex = (currentIndex - 1 + songs.length) % songs.length;\r\n    setCurrentSong(songs[previousIndex]);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const handleSongClick = (song) => {\r\n    setCurrentSong(song);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const handleAddToPlaylist = (song) => {\r\n    if (currentPlaylist) {\r\n      const playlist = playlists.find(p => p.name === currentPlaylist);\r\n      if (playlist && !playlist.songs.find(s => s.id === song.id)) {\r\n        playlist.songs.push(song);\r\n        setPlaylists([...playlists]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromPlaylist = (song) => {\r\n    if (currentPlaylist) {\r\n      const playlist = playlists.find(p => p.name === currentPlaylist);\r\n      if (playlist) {\r\n        playlist.songs = playlist.songs.filter(s => s.id !== song.id);\r\n        setPlaylists([...playlists]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCreatePlaylist = (name) => {\r\n    if (!playlists.find(p => p.name === name)) {\r\n      setPlaylists([...playlists, { name, songs: [] }]);\r\n    }\r\n  };\r\n\r\n  const handleEditPlaylist = (name, updatedSongs) => {\r\n    setPlaylists(playlists.map((playlist) => (playlist.name === name ? { ...playlist, songs: updatedSongs } : playlist)));\r\n  };\r\n\r\n  const handleDeletePlaylist = (name) => {\r\n    setPlaylists(playlists.filter((playlist) => playlist.name !== name));\r\n    if (currentPlaylist === name) setCurrentPlaylist(null);\r\n  };\r\n\r\n  const handleShowPlaylist = () => {\r\n    setShowPlaylist(!showPlaylist);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header onShowPlaylist={handleShowPlaylist} />\r\n      <SearchBar onSearch={handleSearch} />\r\n      <div className=\"main-content\">\r\n        <SongList\r\n          songs={searchResults.length > 0 ? searchResults : songs}\r\n          onSongClick={handleSongClick}\r\n          onAddToPlaylist={handleAddToPlaylist}\r\n        />\r\n        <MusicPlayer\r\n          currentSong={currentSong}\r\n          isPlaying={isPlaying}\r\n          onPlayPause={handlePlayPause}\r\n          onNext={handleNext}\r\n          onPrevious={handlePrevious}\r\n        />\r\n      </div>\r\n      {showPlaylist && (\r\n        <Playlist\r\n          playlists={playlists}\r\n          currentPlaylist={currentPlaylist}\r\n          onAddToPlaylist={handleAddToPlaylist}\r\n          onRemoveFromPlaylist={handleRemoveFromPlaylist}\r\n          onCreatePlaylist={handleCreatePlaylist}\r\n          onEditPlaylist={handleEditPlaylist}\r\n          onDeletePlaylist={handleDeletePlaylist}\r\n          onSelectPlaylist={setCurrentPlaylist}\r\n        />\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}