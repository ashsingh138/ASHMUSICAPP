{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashsi\\\\OneDrive\\\\Desktop\\\\SF TASK3\\\\music-streaming-app\\\\src\\\\components\\\\Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = ({\n  playlists,\n  addPlaylist,\n  addSongToPlaylist,\n  songs\n}) => {\n  _s();\n  const [playlistName, setPlaylistName] = useState('');\n  const handleAddPlaylist = () => {\n    if (playlistName) {\n      addPlaylist(playlistName);\n      setPlaylistName('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: playlistName,\n      onChange: e => setPlaylistName(e.target.value),\n      placeholder: \"New Playlist Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddPlaylist,\n      children: \"Add Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), playlists.map((playlist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: playlist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlist.songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [song.title, \" - \", song.artist]\n        }, song.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => addSongToPlaylist(playlist.name, songs.find(song => song.id === parseInt(e.target.value))),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Add Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), songs.map(song => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: song.id,\n          children: song.title\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"0XveP4yx/aygUhgk35QEuibNg6s=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Playlist","playlists","addPlaylist","addSongToPlaylist","songs","_s","playlistName","setPlaylistName","handleAddPlaylist","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","playlist","index","name","song","title","artist","id","find","parseInt","_c","$RefreshReg$"],"sources":["C:/Users/ashsi/OneDrive/Desktop/SF TASK3/music-streaming-app/src/components/Playlist.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Playlist = ({ playlists, addPlaylist, addSongToPlaylist, songs }) => {\r\n  const [playlistName, setPlaylistName] = useState('');\r\n\r\n  const handleAddPlaylist = () => {\r\n    if (playlistName) {\r\n      addPlaylist(playlistName);\r\n      setPlaylistName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"playlist\">\r\n      <h2>Playlists</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={playlistName}\r\n        onChange={(e) => setPlaylistName(e.target.value)}\r\n        placeholder=\"New Playlist Name\"\r\n      />\r\n      <button onClick={handleAddPlaylist}>Add Playlist</button>\r\n      {playlists.map((playlist, index) => (\r\n        <div key={index} className=\"playlist-item\">\r\n          <h3>{playlist.name}</h3>\r\n          <ul>\r\n            {playlist.songs.map((song) => (\r\n              <li key={song.id}>{song.title} - {song.artist}</li>\r\n            ))}\r\n          </ul>\r\n          <select onChange={(e) => addSongToPlaylist(playlist.name, songs.find(song => song.id === parseInt(e.target.value)))}>\r\n            <option value=\"\">Add Song</option>\r\n            {songs.map((song) => (\r\n              <option key={song.id} value={song.id}>{song.title}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}