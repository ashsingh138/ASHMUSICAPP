{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashsi\\\\OneDrive\\\\Desktop\\\\SF TASK3\\\\music-streaming-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport SongList from '../components/SongList';\nimport MusicPlayer from '../components/MusicPlayer';\nimport CreatePlaylist from '../components/CreatePlaylist';\nimport Playlist from '../components/Playlist';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://thingproxy.freeboard.io/fetch/https://api.deezer.com';\nconst Home = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [playlists, setPlaylists] = useState([]);\n  const [newPlaylistName, setNewPlaylistName] = useState('');\n  useEffect(() => {\n    fetchInitialSongs();\n    fetchPlaylists();\n  }, []);\n  const fetchInitialSongs = async () => {\n    try {\n      const response = await axios.get(`${API_URL}/playlist/3155776842`);\n      setSongs(response.data.tracks.data);\n      setSearchResults(response.data.tracks.data);\n    } catch (error) {\n      console.error('Error fetching songs:', error);\n    }\n  };\n  const fetchPlaylists = () => {\n    // Implement fetching playlists from API or storage\n    // For now, using a placeholder array\n    const initialPlaylists = [{\n      id: 1,\n      name: 'Favorites',\n      songs: []\n    }, {\n      id: 2,\n      name: 'Party Mix',\n      songs: []\n    }];\n    setPlaylists(initialPlaylists);\n  };\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    const filteredSongs = songs.filter(song => song.title.toLowerCase().includes(event.target.value.toLowerCase()));\n    setSearchResults(filteredSongs);\n  };\n  const handleSongClick = song => {\n    setCurrentSong(song);\n  };\n  const createPlaylist = () => {\n    if (newPlaylistName) {\n      const newPlaylist = {\n        id: playlists.length + 1,\n        name: newPlaylistName,\n        songs: []\n      };\n      setPlaylists([...playlists, newPlaylist]);\n      setNewPlaylistName('');\n    }\n  };\n  const addToPlaylist = (song, playlistId) => {\n    const playlistIndex = playlists.findIndex(playlist => playlist.id === playlistId);\n    if (playlistIndex !== -1) {\n      const updatedPlaylist = {\n        ...playlists[playlistIndex]\n      };\n      const isDuplicate = updatedPlaylist.songs.some(s => s.id === song.id);\n      if (!isDuplicate) {\n        updatedPlaylist.songs.push(song);\n        const updatedPlaylists = [...playlists];\n        updatedPlaylists[playlistIndex] = updatedPlaylist;\n        setPlaylists(updatedPlaylists);\n      } else {\n        alert('This song is already in the playlist.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: /*#__PURE__*/_jsxDEV(SongList, {\n          songs: searchResults,\n          onSongClick: handleSongClick,\n          onAddToPlaylist: addToPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(CreatePlaylist, {\n          newPlaylistName: newPlaylistName,\n          setNewPlaylistName: setNewPlaylistName,\n          createPlaylist: createPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), playlists.map(playlist => /*#__PURE__*/_jsxDEV(Playlist, {\n          playlist: playlist\n        }, playlist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(MusicPlayer, {\n      song: currentSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"0ysOXI8Bk6tAdSjkcSicSLviKaE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","SongList","MusicPlayer","CreatePlaylist","Playlist","jsxDEV","_jsxDEV","API_URL","Home","_s","songs","setSongs","searchTerm","setSearchTerm","searchResults","setSearchResults","currentSong","setCurrentSong","playlists","setPlaylists","newPlaylistName","setNewPlaylistName","fetchInitialSongs","fetchPlaylists","response","get","data","tracks","error","console","initialPlaylists","id","name","handleSearch","event","target","value","filteredSongs","filter","song","title","toLowerCase","includes","handleSongClick","createPlaylist","newPlaylist","length","addToPlaylist","playlistId","playlistIndex","findIndex","playlist","updatedPlaylist","isDuplicate","some","s","push","updatedPlaylists","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSongClick","onAddToPlaylist","map","_c","$RefreshReg$"],"sources":["C:/Users/ashsi/OneDrive/Desktop/SF TASK3/music-streaming-app/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport SongList from '../components/SongList';\r\nimport MusicPlayer from '../components/MusicPlayer';\r\nimport CreatePlaylist from '../components/CreatePlaylist';\r\nimport Playlist from '../components/Playlist';\r\nimport '../styles.css';\r\n\r\nconst API_URL = 'https://thingproxy.freeboard.io/fetch/https://api.deezer.com';\r\n\r\nconst Home = () => {\r\n  const [songs, setSongs] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [newPlaylistName, setNewPlaylistName] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchInitialSongs();\r\n    fetchPlaylists();\r\n  }, []);\r\n\r\n  const fetchInitialSongs = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/playlist/3155776842`);\r\n      setSongs(response.data.tracks.data);\r\n      setSearchResults(response.data.tracks.data);\r\n    } catch (error) {\r\n      console.error('Error fetching songs:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPlaylists = () => {\r\n    // Implement fetching playlists from API or storage\r\n    // For now, using a placeholder array\r\n    const initialPlaylists = [\r\n      { id: 1, name: 'Favorites', songs: [] },\r\n      { id: 2, name: 'Party Mix', songs: [] },\r\n    ];\r\n    setPlaylists(initialPlaylists);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    const filteredSongs = songs.filter((song) =>\r\n      song.title.toLowerCase().includes(event.target.value.toLowerCase())\r\n    );\r\n    setSearchResults(filteredSongs);\r\n  };\r\n\r\n  const handleSongClick = (song) => {\r\n    setCurrentSong(song);\r\n  };\r\n\r\n  const createPlaylist = () => {\r\n    if (newPlaylistName) {\r\n      const newPlaylist = {\r\n        id: playlists.length + 1,\r\n        name: newPlaylistName,\r\n        songs: [],\r\n      };\r\n      setPlaylists([...playlists, newPlaylist]);\r\n      setNewPlaylistName('');\r\n    }\r\n  };\r\n\r\n  const addToPlaylist = (song, playlistId) => {\r\n    const playlistIndex = playlists.findIndex((playlist) => playlist.id === playlistId);\r\n    if (playlistIndex !== -1) {\r\n      const updatedPlaylist = { ...playlists[playlistIndex] };\r\n      const isDuplicate = updatedPlaylist.songs.some((s) => s.id === song.id);\r\n      if (!isDuplicate) {\r\n        updatedPlaylist.songs.push(song);\r\n        const updatedPlaylists = [...playlists];\r\n        updatedPlaylists[playlistIndex] = updatedPlaylist;\r\n        setPlaylists(updatedPlaylists);\r\n      } else {\r\n        alert('This song is already in the playlist.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <div className=\"main-content\">\r\n        <div className=\"left-panel\">\r\n          <SongList songs={searchResults} onSongClick={handleSongClick} onAddToPlaylist={addToPlaylist} />\r\n        </div>\r\n        <div className=\"right-panel\">\r\n          <CreatePlaylist\r\n            newPlaylistName={newPlaylistName}\r\n            setNewPlaylistName={setNewPlaylistName}\r\n            createPlaylist={createPlaylist}\r\n          />\r\n          {playlists.map((playlist) => (\r\n            <Playlist key={playlist.id} playlist={playlist} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {currentSong && <MusicPlayer song={currentSong} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}