{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashsi\\\\OneDrive\\\\Desktop\\\\SF TASK3\\\\music-streaming-app\\\\src\\\\components\\\\Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = ({\n  playlists,\n  currentPlaylist,\n  onAddToPlaylist,\n  onRemoveFromPlaylist,\n  onCreatePlaylist,\n  onEditPlaylist,\n  onDeletePlaylist\n}) => {\n  _s();\n  const [newPlaylistName, setNewPlaylistName] = useState('');\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  const handleCreate = () => {\n    if (newPlaylistName) {\n      onCreatePlaylist(newPlaylistName);\n      setNewPlaylistName('');\n    }\n  };\n  const handleSelectPlaylist = playlist => {\n    setSelectedPlaylist(playlist);\n  };\n  const handleRemove = song => {\n    if (selectedPlaylist) {\n      onRemoveFromPlaylist(song, selectedPlaylist.name);\n    }\n  };\n  const handleDelete = () => {\n    if (selectedPlaylist) {\n      onDeletePlaylist(selectedPlaylist.name);\n      setSelectedPlaylist(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playlist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newPlaylistName,\n        onChange: e => setNewPlaylistName(e.target.value),\n        placeholder: \"New Playlist Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"Create Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-list\",\n      children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `playlist-item ${(selectedPlaylist === null || selectedPlaylist === void 0 ? void 0 : selectedPlaylist.name) === playlist.name ? 'selected' : ''}`,\n        onClick: () => handleSelectPlaylist(playlist),\n        children: playlist.name\n      }, playlist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), selectedPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedPlaylist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedPlaylist.songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [song.title, \" by \", song.artist, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemove(song),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, song.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"vqxeSMgN+OPajazJMYtxYlE6Jcg=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Playlist","playlists","currentPlaylist","onAddToPlaylist","onRemoveFromPlaylist","onCreatePlaylist","onEditPlaylist","onDeletePlaylist","_s","newPlaylistName","setNewPlaylistName","selectedPlaylist","setSelectedPlaylist","handleCreate","handleSelectPlaylist","playlist","handleRemove","song","name","handleDelete","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","id","songs","title","artist","_c","$RefreshReg$"],"sources":["C:/Users/ashsi/OneDrive/Desktop/SF TASK3/music-streaming-app/src/components/Playlist.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Playlist = ({\r\n  playlists,\r\n  currentPlaylist,\r\n  onAddToPlaylist,\r\n  onRemoveFromPlaylist,\r\n  onCreatePlaylist,\r\n  onEditPlaylist,\r\n  onDeletePlaylist,\r\n}) => {\r\n  const [newPlaylistName, setNewPlaylistName] = useState('');\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\r\n\r\n  const handleCreate = () => {\r\n    if (newPlaylistName) {\r\n      onCreatePlaylist(newPlaylistName);\r\n      setNewPlaylistName('');\r\n    }\r\n  };\r\n\r\n  const handleSelectPlaylist = (playlist) => {\r\n    setSelectedPlaylist(playlist);\r\n  };\r\n\r\n  const handleRemove = (song) => {\r\n    if (selectedPlaylist) {\r\n      onRemoveFromPlaylist(song, selectedPlaylist.name);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (selectedPlaylist) {\r\n      onDeletePlaylist(selectedPlaylist.name);\r\n      setSelectedPlaylist(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"playlist-container\">\r\n      <div className=\"playlist-header\">\r\n        <input\r\n          type=\"text\"\r\n          value={newPlaylistName}\r\n          onChange={(e) => setNewPlaylistName(e.target.value)}\r\n          placeholder=\"New Playlist Name\"\r\n        />\r\n        <button onClick={handleCreate}>Create Playlist</button>\r\n      </div>\r\n      <div className=\"playlist-list\">\r\n        {playlists.map((playlist) => (\r\n          <div\r\n            key={playlist.id}\r\n            className={`playlist-item ${selectedPlaylist?.name === playlist.name ? 'selected' : ''}`}\r\n            onClick={() => handleSelectPlaylist(playlist)}\r\n          >\r\n            {playlist.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedPlaylist && (\r\n        <div className=\"playlist-details\">\r\n          <h3>{selectedPlaylist.name}</h3>\r\n          <button onClick={handleDelete}>Delete Playlist</button>\r\n          <ul>\r\n            {selectedPlaylist.songs.map((song) => (\r\n              <li key={song.id}>\r\n                {song.title} by {song.artist}\r\n                <button onClick={() => handleRemove(song)}>Remove</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}