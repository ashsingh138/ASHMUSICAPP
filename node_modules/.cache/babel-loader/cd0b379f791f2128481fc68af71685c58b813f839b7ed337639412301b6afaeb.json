{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashsi\\\\OneDrive\\\\Desktop\\\\SF TASK3\\\\music-streaming-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport SearchBar from '../components/SearchBar';\nimport SongList from '../components/SongList';\nimport MusicPlayer from '../components/MusicPlayer';\nimport Playlist from '../components/Playlist';\nimport Footer from '../components/Footer';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [playlists, setPlaylists] = useState([]);\n  const [currentPlaylist, setCurrentPlaylist] = useState([]);\n  useEffect(() => {\n    fetchSongs();\n    fetchPlaylists();\n  }, []);\n  const fetchSongs = async () => {\n    try {\n      const response = await axios.get('https://thingproxy.freeboard.io/fetch/https://api.deezer.com/chart');\n      const fetchedSongs = response.data.tracks.data.map(song => ({\n        id: song.id,\n        title: song.title,\n        artist: song.artist.name,\n        preview: song.preview,\n        image: song.album.cover_medium // Adding image URL\n      }));\n      setSongs(fetchedSongs);\n    } catch (error) {\n      console.error('Error fetching songs:', error);\n    }\n  };\n  const fetchPlaylists = () => {\n    // Placeholder for fetching playlists\n    const initialPlaylists = [{\n      id: 1,\n      name: 'Favorites',\n      songs: []\n    }, {\n      id: 2,\n      name: 'Party Mix',\n      songs: []\n    }];\n    setPlaylists(initialPlaylists);\n  };\n  const handleSearch = async query => {\n    try {\n      const response = await axios.get(`https://thingproxy.freeboard.io/fetch/https://api.deezer.com/search?q=${query}`);\n      const searchResults = response.data.data.map(song => ({\n        id: song.id,\n        title: song.title,\n        artist: song.artist.name,\n        preview: song.preview,\n        image: song.album.cover_medium // Adding image URL\n      }));\n      setSearchResults(searchResults);\n    } catch (error) {\n      console.error('Error searching songs:', error);\n    }\n  };\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const handleNext = () => {\n    const currentIndex = songs.indexOf(currentSong);\n    const nextIndex = (currentIndex + 1) % songs.length;\n    setCurrentSong(songs[nextIndex]);\n    setIsPlaying(true);\n  };\n  const handlePrevious = () => {\n    const currentIndex = songs.indexOf(currentSong);\n    const previousIndex = (currentIndex - 1 + songs.length) % songs.length;\n    setCurrentSong(songs[previousIndex]);\n    setIsPlaying(true);\n  };\n  const handleSongClick = song => {\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n  const handleAddToPlaylist = (song, playlistName) => {\n    const updatedPlaylists = playlists.map(playlist => {\n      if (playlist.name === playlistName) {\n        if (!playlist.songs.find(s => s.id === song.id)) {\n          return {\n            ...playlist,\n            songs: [...playlist.songs, song]\n          };\n        } else {\n          console.log('Song already exists in the playlist.');\n          return playlist;\n        }\n      }\n      return playlist;\n    });\n    setPlaylists(updatedPlaylists);\n  };\n  const handleCreatePlaylist = name => {\n    if (!playlists.some(playlist => playlist.name === name)) {\n      const newPlaylist = {\n        id: playlists.length + 1,\n        name: name,\n        songs: []\n      };\n      setPlaylists([...playlists, newPlaylist]);\n    } else {\n      console.log('Playlist with this name already exists.');\n    }\n  };\n  const handleEditPlaylist = (name, updatedSongs) => {\n    const updatedPlaylists = playlists.map(playlist => playlist.name === name ? {\n      ...playlist,\n      songs: updatedSongs\n    } : playlist);\n    setPlaylists(updatedPlaylists);\n  };\n  const handleDeletePlaylist = name => {\n    const updatedPlaylists = playlists.filter(playlist => playlist.name !== name);\n    setPlaylists(updatedPlaylists);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(SongList, {\n        songs: searchResults.length > 0 ? searchResults : songs,\n        onSongClick: handleSongClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MusicPlayer, {\n        currentSong: currentSong,\n        isPlaying: isPlaying,\n        onPlayPause: handlePlayPause,\n        onNext: handleNext,\n        onPrevious: handlePrevious\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n      playlists: playlists,\n      currentPlaylist: currentPlaylist,\n      onAddToPlaylist: handleAddToPlaylist,\n      onRemoveFromPlaylist: handleRemoveFromPlaylist,\n      onCreatePlaylist: handleCreatePlaylist,\n      onEditPlaylist: handleEditPlaylist,\n      onDeletePlaylist: handleDeletePlaylist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"YEmGMKXVmepi0Rdd0eh+zdqQqU4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","SearchBar","SongList","MusicPlayer","Playlist","Footer","jsxDEV","_jsxDEV","Home","_s","songs","setSongs","searchResults","setSearchResults","currentSong","setCurrentSong","isPlaying","setIsPlaying","playlists","setPlaylists","currentPlaylist","setCurrentPlaylist","fetchSongs","fetchPlaylists","response","get","fetchedSongs","data","tracks","map","song","id","title","artist","name","preview","image","album","cover_medium","error","console","initialPlaylists","handleSearch","query","handlePlayPause","handleNext","currentIndex","indexOf","nextIndex","length","handlePrevious","previousIndex","handleSongClick","handleAddToPlaylist","playlistName","updatedPlaylists","playlist","find","s","log","handleCreatePlaylist","some","newPlaylist","handleEditPlaylist","updatedSongs","handleDeletePlaylist","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onSongClick","onPlayPause","onNext","onPrevious","onAddToPlaylist","onRemoveFromPlaylist","handleRemoveFromPlaylist","onCreatePlaylist","onEditPlaylist","onDeletePlaylist","_c","$RefreshReg$"],"sources":["C:/Users/ashsi/OneDrive/Desktop/SF TASK3/music-streaming-app/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../components/Header';\r\nimport SearchBar from '../components/SearchBar';\r\nimport SongList from '../components/SongList';\r\nimport MusicPlayer from '../components/MusicPlayer';\r\nimport Playlist from '../components/Playlist';\r\nimport Footer from '../components/Footer';\r\nimport '../styles.css';\r\n\r\nconst Home = () => {\r\n  const [songs, setSongs] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [currentPlaylist, setCurrentPlaylist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchSongs();\r\n    fetchPlaylists();\r\n  }, []);\r\n\r\n  const fetchSongs = async () => {\r\n    try {\r\n      const response = await axios.get('https://thingproxy.freeboard.io/fetch/https://api.deezer.com/chart');\r\n      const fetchedSongs = response.data.tracks.data.map((song) => ({\r\n        id: song.id,\r\n        title: song.title,\r\n        artist: song.artist.name,\r\n        preview: song.preview,\r\n        image: song.album.cover_medium, // Adding image URL\r\n      }));\r\n      setSongs(fetchedSongs);\r\n    } catch (error) {\r\n      console.error('Error fetching songs:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPlaylists = () => {\r\n    // Placeholder for fetching playlists\r\n    const initialPlaylists = [\r\n      { id: 1, name: 'Favorites', songs: [] },\r\n      { id: 2, name: 'Party Mix', songs: [] },\r\n    ];\r\n    setPlaylists(initialPlaylists);\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    try {\r\n      const response = await axios.get(`https://thingproxy.freeboard.io/fetch/https://api.deezer.com/search?q=${query}`);\r\n      const searchResults = response.data.data.map((song) => ({\r\n        id: song.id,\r\n        title: song.title,\r\n        artist: song.artist.name,\r\n        preview: song.preview,\r\n        image: song.album.cover_medium, // Adding image URL\r\n      }));\r\n      setSearchResults(searchResults);\r\n    } catch (error) {\r\n      console.error('Error searching songs:', error);\r\n    }\r\n  };\r\n\r\n  const handlePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const currentIndex = songs.indexOf(currentSong);\r\n    const nextIndex = (currentIndex + 1) % songs.length;\r\n    setCurrentSong(songs[nextIndex]);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    const currentIndex = songs.indexOf(currentSong);\r\n    const previousIndex = (currentIndex - 1 + songs.length) % songs.length;\r\n    setCurrentSong(songs[previousIndex]);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const handleSongClick = (song) => {\r\n    setCurrentSong(song);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const handleAddToPlaylist = (song, playlistName) => {\r\n    const updatedPlaylists = playlists.map((playlist) => {\r\n      if (playlist.name === playlistName) {\r\n        if (!playlist.songs.find((s) => s.id === song.id)) {\r\n          return {\r\n            ...playlist,\r\n            songs: [...playlist.songs, song],\r\n          };\r\n        } else {\r\n          console.log('Song already exists in the playlist.');\r\n          return playlist;\r\n        }\r\n      }\r\n      return playlist;\r\n    });\r\n    setPlaylists(updatedPlaylists);\r\n  };\r\n\r\n  const handleCreatePlaylist = (name) => {\r\n    if (!playlists.some((playlist) => playlist.name === name)) {\r\n      const newPlaylist = {\r\n        id: playlists.length + 1,\r\n        name: name,\r\n        songs: [],\r\n      };\r\n      setPlaylists([...playlists, newPlaylist]);\r\n    } else {\r\n      console.log('Playlist with this name already exists.');\r\n    }\r\n  };\r\n\r\n  const handleEditPlaylist = (name, updatedSongs) => {\r\n    const updatedPlaylists = playlists.map((playlist) =>\r\n      playlist.name === name ? { ...playlist, songs: updatedSongs } : playlist\r\n    );\r\n    setPlaylists(updatedPlaylists);\r\n  };\r\n\r\n  const handleDeletePlaylist = (name) => {\r\n    const updatedPlaylists = playlists.filter((playlist) => playlist.name !== name);\r\n    setPlaylists(updatedPlaylists);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <SearchBar onSearch={handleSearch} />\r\n      <div className=\"main-content\">\r\n        <SongList songs={searchResults.length > 0 ? searchResults : songs} onSongClick={handleSongClick} />\r\n        <MusicPlayer\r\n          currentSong={currentSong}\r\n          isPlaying={isPlaying}\r\n          onPlayPause={handlePlayPause}\r\n          onNext={handleNext}\r\n          onPrevious={handlePrevious}\r\n        />\r\n      </div>\r\n      <Playlist\r\n        playlists={playlists}\r\n        currentPlaylist={currentPlaylist}\r\n        onAddToPlaylist={handleAddToPlaylist}\r\n        onRemoveFromPlaylist={handleRemoveFromPlaylist}\r\n        onCreatePlaylist={handleCreatePlaylist}\r\n        onEditPlaylist={handleEditPlaylist}\r\n        onDeletePlaylist={handleDeletePlaylist}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}